import placo
import matplotlib.pyplot as plt
import numpy as np

dt = .1
horizon = 50
foot_width = 0.8
foot_height = 0.5
z_c = 0.8
g = 9.81
left_foot = np.array([
    [0.0, 0.2, 0.0, 0.0],
    [0.0, 0.2, 0.0, 0.0],
    [0.00857143, 0.2, 0.01714286, 0.0],
    [0.01714286, 0.2, 0.03428571, 0.0],
    [0.02571429, 0.2, 0.05142857, 0.0],
    [0.03428571, 0.2, 0.06857143, 0.0],
    [0.04285714, 0.2, 0.08571429, 0.0],
    [0.05142857, 0.2, 0.10285714, 0.0],
    [0.06, 0.2, 0.12, 0.0],
    [0.06857143, 0.2, 0.13714286, 0.0],
    [0.07714286, 0.2, 0.15428571, 0.0],
    [0.08571429, 0.2, 0.17142857, 0.0],
    [0.09428571, 0.2, 0.18857143, 0.0],
    [0.10285714, 0.2, 0.19428571, 0.0],
    [0.11142857, 0.2, 0.17714286, 0.0],
    [0.12, 0.2, 0.16, 0.0],
    [0.12857143, 0.2, 0.14285714, 0.0],
    [0.13714286, 0.2, 0.12571429, 0.0],
    [0.14571429, 0.2, 0.10857143, 0.0],
    [0.15428571, 0.2, 0.09142857, 0.0],
    [0.16285714, 0.2, 0.07428571, 0.0],
    [0.17142857, 0.2, 0.05714286, 0.0],
    [0.18, 0.2, 0.04, 0.0],
    [0.18857143, 0.2, 0.02285714, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.00571429, 0.0],
    [0.19714286, 0.2, 0.0, 0.0]
])
right_foot = np.array([
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.0, -0.2, 0.0, 0.0],
    [0.01714286, -0.2, 0.01714286, 0.0],
    [0.03428571, -0.2, 0.03428571, 0.0],
    [0.05142857, -0.2, 0.05142857, 0.0],
    [0.06857143, -0.2, 0.06857143, 0.0],
    [0.08571429, -0.2, 0.08571429, 0.0],
    [0.10285714, -0.2, 0.10285714, 0.0],
    [0.12, -0.2, 0.12, 0.0],
    [0.13714286, -0.2, 0.13714286, 0.0],
    [0.15428571, -0.2, 0.15428571, 0.0],
    [0.17142857, -0.2, 0.17142857, 0.0],
    [0.18857143, -0.2, 0.18857143, 0.0],
    [0.20571429, -0.2, 0.19428571, 0.0],
    [0.22285714, -0.2, 0.17714286, 0.0],
    [0.24, -0.2, 0.16, 0.0],
    [0.25714286, -0.2, 0.14285714, 0.0],
    [0.27428571, -0.2, 0.12571429, 0.0],
    [0.29142857, -0.2, 0.10857143, 0.0],
    [0.30857143, -0.2, 0.09142857, 0.0],
    [0.32571429, -0.2, 0.07428571, 0.0],
    [0.34285714, -0.2, 0.05714286, 0.0],
    [0.36, -0.2, 0.04, 0.0],
    [0.37714286, -0.2, 0.02285714, 0.0],
    [0.39428571, -0.2, 0.00571429, 0.0],
    [0.39428571, -0.2, 0.00571429, 0.0],
    [0.39428571, -0.2, 0.00571429, 0.0]
])
support_state = [
    "right", "right", "right", "right", "right", "right", "right", "right", "right", "right",
    "right", "right", "right", "right", "right", "right", "right", "right", "right", "right",
    "right", "right", "right", "right", "left", "left", "left", "left", "left", "left",
    "left", "left", "left", "left", "left", "left", "left", "left", "left", "left",
    "left", "left", "left", "left", "left", "left", "left", "left", "right", "right"
]
com = [
    np.array([(left_foot[0][0] + right_foot[0][0]) / 2.,(left_foot[0][1] + right_foot[0][1]) / 2.]).reshape(2, 1),
    np.array([0., 0.]).reshape(2, 1),
    np.array([0., 0.]).reshape(2, 1)
]

problem = placo.Problem()
lipm = placo.LIPM(problem, dt, horizon, 0., com[0], com[1], com[2])

omg = g / z_c
omg_2 = omg**2

for i in range(1, horizon + 1):
    support_foot = np.array(left_foot[i - 1] if support_state[i - 1] == "left" else right_foot[i - 1])
    support_polygon = [
        np.array([support_foot[0] - foot_width / 2., support_foot[1] + foot_height / 2.]),
        np.array([support_foot[0] + foot_width / 2., support_foot[1] + foot_height / 2.]),
        np.array([support_foot[0] + foot_width / 2., support_foot[1] - foot_height / 2.]),
        np.array([support_foot[0] - foot_width / 2., support_foot[1] - foot_height / 2.]),
    ]

    problem.add_constraint(placo.PolygonConstraint.in_polygon_xy(lipm.zmp(i, omg_2), support_polygon, 0.01))
    problem.add_constraint(
        lipm.zmp(i, omg_2) == support_foot[:2]
    ).configure("soft", 1.)

problem.solve()

traj = lipm.get_trajectory()
ts = np.linspace(0, dt * horizon, 1000)
xs = [traj.pos(t)[0] for t in ts]
ys = [traj.pos(t)[1] for t in ts]

plt.plot(left_foot[:, 0], left_foot[:, 1], 'bo')
plt.plot(right_foot[:, 0], right_foot[:, 1], 'go')
plt.plot(xs, ys, 'r')
plt.show()

print(traj.zmp(0, omg_2))
